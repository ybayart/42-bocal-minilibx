1
00:00:05,949 --> 00:00:07,393
Bienvenue dans cette deuxième vidéo

2
00:00:07,393 --> 00:00:09,475
d'introduction à la MiniLibX. Celle ci va

3
00:00:09,475 --> 00:00:12,185
concerner la gestion des événements.

4
00:00:12,185 --> 00:00:14,335
Alors les événements qu'est ce que c'est ?

5
00:00:14,335 --> 00:00:16,195
Tout simplement, vous avez appris sur la

6
00:00:16,195 --> 00:00:17,775
vidéo précédente à ouvrir une fenêtre,

7
00:00:17,775 --> 00:00:20,235
éventuellement dessiner à l'intérieur. Les

8
00:00:20,235 --> 00:00:22,565
événements c'est lorsque l'utilisateur va

9
00:00:22,565 --> 00:00:24,905
utiliser le clavier ou la souris et que

10
00:00:24,905 --> 00:00:26,955
vous allez pouvoir dans votre programme

11
00:00:26,955 --> 00:00:29,395
récupérer l'information.

12
00:00:29,395 --> 00:00:31,515
Alors on va reprendre le projet qu'on

13
00:00:31,515 --> 00:00:33,495
avait initialement commencé dans la vidéo

14
00:00:33,495 --> 00:00:35,285
précédente.

15
00:00:37,304 --> 00:00:42,204
Et on va indiquer avant de lancer mlx_loop

16
00:00:42,204 --> 00:00:45,024
qui est la boucle d'événements qui est le

17
00:00:45,024 --> 00:00:47,124
moment où on laisse complètement la main

18
00:00:47,124 --> 00:00:50,044
au serveur graphique de MAC. On va lui

19
00:00:50,044 --> 00:00:52,334
indiquer avant qu'on veut pouvoir détecter

20
00:00:52,334 --> 00:00:54,724
lorsque par exemple une touche au clavier

21
00:00:54,724 --> 00:00:59,954
a été appuyée. On a pour cela toujours nos

22
00:00:59,954 --> 00:01:08,214
man. Et on va avoir le man mlx_loop qui va

23
00:01:08,214 --> 00:01:11,669
nous indiquer quelles sont les fonctions

24
00:01:11,669 --> 00:01:14,189
que vous allez pouvoir utiliser. Je vais

25
00:01:14,189 --> 00:01:16,839
ici faire une démo uniquement avec cette

26
00:01:16,839 --> 00:01:20,839
fonction là qui s'appelle mlx_key_hook,

27
00:01:20,839 --> 00:01:23,949
c'est à dire que lorsque l'on va recevoir

28
00:01:23,949 --> 00:01:25,909
un événement clavier, c'est à dire que

29
00:01:25,909 --> 00:01:27,989
lorsqu'un utilisateur dans la fenêtre va

30
00:01:27,989 --> 00:01:30,169
appuyer sur une touche au clavier on va

31
00:01:30,169 --> 00:01:32,129
avoir une de nos fonctions à nous qui va

32
00:01:32,129 --> 00:01:35,189
être appelée. Vous remarquerez qu'on a ici

33
00:01:35,189 --> 00:01:37,119
l'identifiant de la fenêtre dans laquelle

34
00:01:37,119 --> 00:01:39,279
on veut récupérer cet événement. Dans

35
00:01:39,279 --> 00:01:41,729
laquelle on veut récupérer le fait qu'un

36
00:01:41,729 --> 00:01:43,519
utilisateur à appuyé sur une touche au

37
00:01:43,519 --> 00:01:44,969
clavier. Et on a ici deux autres

38
00:01:44,969 --> 00:01:46,729
paramètres supplémentaires, le premier

39
00:01:46,729 --> 00:01:48,499
c'est un pointeur sur fonction, c'est à

40
00:01:48,499 --> 00:01:50,319
dire que vous allez ici transmettre une

41
00:01:50,319 --> 00:01:52,549
fonction qui existe dans votre propre code

42
00:01:52,549 --> 00:01:56,309
qui sera appelée par mlx_loop lorsque

43
00:01:56,309 --> 00:01:58,299
l'utilisateur appuiera sur une touche au

44
00:01:58,299 --> 00:02:00,339
clavier. Et enfin vous allez pouvoir

45
00:02:00,339 --> 00:02:04,339
transmettre ici un pointeur qui est

46
00:02:04,339 --> 00:02:07,159
absolument inconnu pour la mlx, qui sera

47
00:02:07,159 --> 00:02:09,589
simplement redonné en paramètre à votre

48
00:02:09,589 --> 00:02:12,799
fonction au moment où elle sera appelée.

49
00:02:12,799 --> 00:02:15,469
Typiquement vous allez pouvoir ici passer

50
00:02:15,469 --> 00:02:16,519
les informations qui vous semblent

51
00:02:16,519 --> 00:02:18,059
intéressantes, pertinentes pour la bonne

52
00:02:18,059 --> 00:02:20,379
marche de votre programme. On va donc

53
00:02:20,379 --> 00:02:23,399
utiliser mlx_key_hook.

54
00:02:24,638 --> 00:02:29,408
Reprenons ici notre exemple.

55
00:02:33,366 --> 00:02:37,346
mlx_key_hook prend comme premier paramètre

56
00:02:37,346 --> 00:02:39,796
l'identifiant de la fenêtre, comme

57
00:02:39,796 --> 00:02:46,776
deuxième paramètre on va lui donner un

58
00:02:46,776 --> 00:02:48,716
pointeur sur fonction d'une fonction que

59
00:02:48,716 --> 00:02:50,286
je n'ai pas encore créé mais que je vais

60
00:02:50,286 --> 00:02:53,516
m'empresser de créer immédiatement.

61
00:03:04,019 --> 00:03:07,029
Et enfin comme dernier paramètre je vais

62
00:03:07,029 --> 00:03:13,049
pour l'instant tout simplement lui passer 0.

63
00:03:16,259 --> 00:03:17,969
C'est à dire que je vais globalement ne

64
00:03:17,969 --> 00:03:20,759
pas utiliser ce dernier paramètre.

65
00:03:20,759 --> 00:03:23,729
Ma fonction deal_key qu'est ce qu'elle va

66
00:03:23,729 --> 00:03:26,409
faire ? Elle va être appelée lorsque vous

67
00:03:26,409 --> 00:03:28,539
allez appuyer sur une touche à l'intérieur

68
00:03:28,539 --> 00:03:30,799
de la fenêtre qui sera ouverte. Alors

69
00:03:30,799 --> 00:03:33,209
cette fonction elle va être appelée d'une

70
00:03:33,209 --> 00:03:35,809
certaine façon. C'est indiqué dans le man,

71
00:03:35,809 --> 00:03:38,499
elle va être appelée avec d'une part un

72
00:03:38,499 --> 00:03:41,789
premier paramètre qui sera le numéro de

73
00:03:41,789 --> 00:03:51,059
touche et comme deuxième paramètre, le

74
00:03:51,059 --> 00:03:55,040
void* que vous aurez transmit ici. Pour

75
00:03:55,040 --> 00:03:57,110
l'instant on a choisi de transmettre 0,

76
00:03:57,110 --> 00:03:58,570
mais peut être que tout à l'heure on aura

77
00:03:58,570 --> 00:04:01,020
envie de transmettre un autre type

78
00:04:01,020 --> 00:04:03,420
d'information selon le contenu qu'on aura

79
00:04:03,420 --> 00:04:05,920
mis ainsi dans la fonction.

80
00:04:05,920 --> 00:04:08,060
Alors on va faire quelque chose de très

81
00:04:08,060 --> 00:04:19,000
simple, on va faire un ft_putchar pour

82
00:04:19,000 --> 00:04:25,920
indiquer qu'on a bien reçu et on va créer

83
00:04:25,920 --> 00:04:33,730
notre fonction ft_putchar qui va avec.

84
00:04:44,362 --> 00:04:47,022
Tâchons de compiler tout ça.

85
00:04:50,355 --> 00:04:53,625
Avec un petit include qui manque.

86
00:05:03,377 --> 00:05:06,237
Il s'agit de unistd.h.

87
00:05:11,353 --> 00:05:18,333
Et on résout le bug qui était mit au

88
00:05:18,333 --> 00:05:21,713
milieu.

89
00:05:31,984 --> 00:05:34,254
Et enfin un return pour la fonction

90
00:05:34,254 --> 00:05:36,674
deal_key qui renvoie un int, elle est

91
00:05:36,674 --> 00:05:38,924
prototypée de cette façon là dans la mlx,

92
00:05:38,924 --> 00:05:40,974
vous ne pouvez pas apriori la prototyper

93
00:05:40,974 --> 00:05:42,834
en void.

94
00:05:47,067 --> 00:05:51,067
La fonction est ouverte. Lorsque j'appuie

95
00:05:51,067 --> 00:05:54,567
sur une touche au clavier vous pouvez

96
00:05:54,567 --> 00:05:59,327
remarquer ici que mon ft_putchar affiche

97
00:05:59,327 --> 00:06:01,997
bien les X, c'est à dire que mon

98
00:06:01,997 --> 00:06:04,147
programme à bien reçu l'information comme

99
00:06:04,147 --> 00:06:05,777
quoi j'avais appuyé sur une touche au

100
00:06:05,777 --> 00:06:08,737
clavier. Je vous laisse pour la suite

101
00:06:08,737 --> 00:06:13,157
continuer dans cette même logique en

102
00:06:13,157 --> 00:06:16,847
utilisant cette fois ci votre ft_putnbr de

103
00:06:16,847 --> 00:06:20,417
sorte à afficher le numéro de touche que

104
00:06:20,417 --> 00:06:22,697
vous avez ici récupéré. Vous pouvez de

105
00:06:22,697 --> 00:06:25,157
cette façon là avoir un comportement

106
00:06:25,157 --> 00:06:27,307
spécifique en fonction de la touche qui a

107
00:06:27,307 --> 00:06:32,167
été utilisée. Enfin si par exemple vous

108
00:06:32,167 --> 00:06:35,866
souhaitez ici en fonction d'une certaine

109
00:06:35,866 --> 00:06:40,686
touche faire appel à mlx_pixel_put.

110
00:06:57,916 --> 00:06:59,996
Parce que vous voulez afficher un pixel

111
00:06:59,996 --> 00:07:01,626
à l'intérieur de l'image lorsque vous

112
00:07:01,626 --> 00:07:04,326
appuyez sur une certaine touche. Et bien

113
00:07:04,326 --> 00:07:06,976
ici vous pouvez appeler

114
00:07:06,976 --> 00:07:08,636
mlx_pixel_put mais vous allez avoir

115
00:07:08,636 --> 00:07:11,006
besoin d'informations. Typiquement

116
00:07:11,006 --> 00:07:16,586
mlx_ptr, win_ptr et puis d'autres

117
00:07:16,586 --> 00:07:18,906
informations qu'il faut rajouter ici.

118
00:07:18,906 --> 00:07:21,896
Mais bien évidemment ces informations vous

119
00:07:21,896 --> 00:07:23,536
ne les avez pas à l'intérieur de cette

120
00:07:23,536 --> 00:07:25,516
fonction puisqu'elle sont déclarées à

121
00:07:25,516 --> 00:07:27,526
l'intérieur de la fonction main. Ca sera

122
00:07:27,526 --> 00:07:30,006
donc à vous de faire en sorte de pouvoir

123
00:07:30,006 --> 00:07:33,726
ici transmettre ces informations là,

124
00:07:33,726 --> 00:07:36,576
mlx_ptr et win_ptr par l'intermédiaire ici

125
00:07:36,576 --> 00:07:40,669
de ce pointeur que vous allez récupérer

126
00:07:40,669 --> 00:07:43,659
par la suite ici en paramètre de votre

127
00:07:43,659 --> 00:07:45,879
fonction deal_key mais je vous laisse

128
00:07:45,879 --> 00:07:48,869
chercher tout ça et fouiller tout ça avec

129
00:07:48,869 --> 00:07:51,629
l'ensemble de vos collègues.

130
00:07:51,629 --> 00:07:53,916
Merci à vous pour cette deuxième vidéo

131
00:07:53,916 --> 00:07:56,566
d'introduction à la mlx.
